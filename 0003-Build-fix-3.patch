From cf0f787cd349c897f7fb78c697a5af5352c6d33e Mon Sep 17 00:00:00 2001
From: "Yew, Chang Ching" <chang.ching.yew@intel.com>
Date: Tue, 2 Jun 2020 16:00:28 +0800
Subject: [PATCH 3/3] Build fix 3

Signed-off-by: Yew, Chang Ching <chang.ching.yew@intel.com>
---
 _studio/shared/include/fast_copy.h            |  2 +-
 .../mfx_player/include/mfx_file_generic.h     | 26 ++++++++++++-
 .../mfx_player/include/mfx_rotated_decoder.h  |  4 ++
 _testsuite/mfx_player/include/vaapi_utils.h   | 38 +++++++++++++++++++
 _testsuite/mfx_player/src/vaapi_utils.cpp     |  2 +
 5 files changed, 69 insertions(+), 3 deletions(-)

diff --git a/_studio/shared/include/fast_copy.h b/_studio/shared/include/fast_copy.h
index 51bfe8ab0..25d85f481 100644
--- a/_studio/shared/include/fast_copy.h
+++ b/_studio/shared/include/fast_copy.h
@@ -21,7 +21,7 @@
 #ifndef __FAST_COPY_H__
 #define __FAST_COPY_H__
 
-#include "mfx_common.h"
+//#include "mfx_common.h"
 
 #include "ippdefs.h"
 
diff --git a/_testsuite/mfx_player/include/mfx_file_generic.h b/_testsuite/mfx_player/include/mfx_file_generic.h
index d0e3b287a..832bea746 100644
--- a/_testsuite/mfx_player/include/mfx_file_generic.h
+++ b/_testsuite/mfx_player/include/mfx_file_generic.h
@@ -14,6 +14,28 @@ File Name: .h
 
 #include "mfx_ifile.h"
 
+#if 0
+#ifndef MFX_DEBUG_TRACE
+#define MFX_STS_TRACE(sts) sts
+#else
+template <typename T>
+static inline T mfx_print_err(T sts, const char *file, int line, const char *func)
+{
+    if (sts)
+    {
+        printf("%s: %d: %s: Error = %d\n", file, line, func, sts);
+    }
+    return sts;
+}
+#define MFX_STS_TRACE(sts) mfx_print_err(sts, __FILE__, __LINE__, __FUNCTION__)
+#endif
+
+#define MFX_SUCCEEDED(sts)      (MFX_STS_TRACE(sts) == MFX_ERR_NONE)
+#define MFX_FAILED(sts)         (MFX_STS_TRACE(sts) != MFX_ERR_NONE)
+#define MFX_RETURN(sts)         { return MFX_STS_TRACE(sts); }
+#define MFX_CHECK(EXPR, ERR)    { if (!(EXPR)) MFX_RETURN(ERR); }
+#endif
+
 class GenericFile
     : public IFile
 {
@@ -99,7 +121,7 @@ public:
         if (NULL == m_pFD)
             return MFX_ERR_NONE;
         
-        MFX_CHECK(size == (mfxU32)vm_file_fwrite(p, 1, size, m_pFD), MFX_ERR_UNDEFINED_BEHAVIOR);
+        //FIXME MFX_CHECK(size == (mfxU32)vm_file_fwrite(p, 1, size, m_pFD), MFX_ERR_UNDEFINED_BEHAVIOR);
 
         return MFX_ERR_NONE;    
     }
@@ -115,7 +137,7 @@ public:
         if (NULL == m_pFD)
             return MFX_ERR_NONE;
 
-        MFX_CHECK(0 == vm_file_fseek(m_pFD, position, mode), MFX_ERR_UNDEFINED_BEHAVIOR);
+        //FIXME MFX_CHECK(0 == vm_file_fseek(m_pFD, position, mode), MFX_ERR_UNDEFINED_BEHAVIOR);
 
         return MFX_ERR_NONE;
     }
diff --git a/_testsuite/mfx_player/include/mfx_rotated_decoder.h b/_testsuite/mfx_player/include/mfx_rotated_decoder.h
index 6301657d4..6cb119a29 100644
--- a/_testsuite/mfx_player/include/mfx_rotated_decoder.h
+++ b/_testsuite/mfx_player/include/mfx_rotated_decoder.h
@@ -13,6 +13,10 @@ File Name: .h
 #pragma once
 #include "mfxjpeg.h"
 
+#undef MFX_CHECK
+#define MFX_CHECK(expr) \
+    MFX_CHECK_SET_ERR(expr, LAST_ERR_OR_UNK(), MFX_ERR_UNKNOWN);\
+
 class RotatedDecoder : public InterfaceProxy<IYUVSource>
 {
     typedef InterfaceProxy<IYUVSource> base;
diff --git a/_testsuite/mfx_player/include/vaapi_utils.h b/_testsuite/mfx_player/include/vaapi_utils.h
index aa374ad0d..71e912195 100644
--- a/_testsuite/mfx_player/include/vaapi_utils.h
+++ b/_testsuite/mfx_player/include/vaapi_utils.h
@@ -232,6 +232,44 @@ CLibVA* CreateLibVA(const std::string& devicePath = "", int type = MFX_LIBVA_DRM
 
 mfxStatus va_to_mfx_status(VAStatus va_res);
 
+/** RG16: packed 5/6-bit RGB.
+ *
+ * Each pixel is a two-byte little-endian value.
+ * Red, green and blue are found in bits 15:11, 10:5, 4:0 respectively.
+ */
+#define VA_FOURCC_RGB565        0x36314752
+
+ /** Y210: packed 10-bit YUV 4:2:2.
+  *
+  * Eight bytes represent a pair of pixels.  Each sample is a two-byte little-endian value,
+  * with the bottom six bits ignored.  The samples are in the order Y, U, Y, V.
+  */
+#define VA_FOURCC_Y210          0x30313259
+
+  /** Y410: packed 10-bit YUVA 4:4:4.
+   *
+   * Each pixel is a four-byte little-endian value.
+   * A, V, Y, U are found in bits 31:30, 29:20, 19:10, 9:0 respectively.
+   */
+#define VA_FOURCC_Y410          0x30313459
+
+   /** Y216: packed 16-bit YUV 4:2:2.
+    *
+    * Eight bytes represent a pair of pixels.  Each sample is a two-byte little-endian value.
+    * The samples are in the order Y, U, Y, V.
+    */
+#define VA_FOURCC_Y216          0x36313259
+    /** Y416: packed 16-bit YUVA 4:4:4.
+     *
+     * Each pixel is a set of four samples, each of which is a two-byte little-endian value.
+     * The samples are in the order A, V, Y, U.
+     */
+#define VA_FOURCC_Y416          0x36313459
+     /**
+      * 10-bit Pixel RGB formats.
+      */
+#define VA_FOURCC_A2R10G10B10   0x30335241 /* VA_FOURCC('A','R','3','0') */
+
 #endif // #ifdef LIBVA_SUPPORT
 
 #endif // #ifndef __VAAPI_UTILS_H__
diff --git a/_testsuite/mfx_player/src/vaapi_utils.cpp b/_testsuite/mfx_player/src/vaapi_utils.cpp
index d706a57c2..ea8e57a95 100644
--- a/_testsuite/mfx_player/src/vaapi_utils.cpp
+++ b/_testsuite/mfx_player/src/vaapi_utils.cpp
@@ -16,6 +16,8 @@ Copyright(c) 2011-2020 Intel Corporation. All Rights Reserved.
 
 #if defined(_WIN32) || defined(_WIN64)
 #include <windows.h>
+#else
+#include <dlfcn.h>
 #endif // defined(_WIN32) || defined(_WIN64)
 
 //#if defined(LIBVA_DRM_SUPPORT)
-- 
2.17.1

